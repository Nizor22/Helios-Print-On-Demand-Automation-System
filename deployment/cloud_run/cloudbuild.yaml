steps:
  # Run unit tests
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run', '--rm', '-v', '/workspace:/workspace', '-w', '/workspace', 'python:3.13.6-slim', 'bash', '-c', 'pip install -r requirements.txt && python -m pytest tests/unit/ -v --cov=helios --cov-report=xml']

  # Build CEO orchestrator service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'deployment/docker/Dockerfile.ceo', '-t', 'gcr.io/$PROJECT_ID/helios-ceo:$COMMIT_SHA', '.']

  # Build agent services
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'deployment/docker/Dockerfile.agents', '-t', 'gcr.io/$PROJECT_ID/helios-agents:$COMMIT_SHA', '.']

  # Build MCP server
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'mcp/Dockerfile', '-t', 'gcr.io/$PROJECT_ID/helios-mcp:$COMMIT_SHA', './mcp']

  # Push images to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/helios-ceo:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/helios-agents:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/helios-mcp:$COMMIT_SHA']

  # Deploy to staging
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', 'helios-ceo-staging', '--image', 'gcr.io/$PROJECT_ID/helios-ceo:$COMMIT_SHA', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', 'helios-agents-staging', '--image', 'gcr.io/$PROJECT_ID/helios-agents:$COMMIT_SHA', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', 'helios-mcp-staging', '--image', 'gcr.io/$PROJECT_ID/helios-mcp:$COMMIT_SHA', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']

  # Run integration tests against staging
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run', '--rm', '-v', '/workspace:/workspace', '-w', '/workspace', 'python:3.13.6-slim', 'bash', '-c', 'pip install -r requirements.txt && python -m pytest tests/integration/ -v --env=staging']

  # Deploy to production (only on main branch)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', 'helios-ceo', '--image', 'gcr.io/$PROJECT_ID/helios-ceo:$COMMIT_SHA', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']
    id: 'deploy-ceo-prod'
    waitFor: ['deploy-ceo-staging']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcr.io/google.com/cloudsdktool/cloud-sdk', 'gcloud', 'run', 'deploy', 'helios-agents', '--image', 'gcr.io/$PROJECT_ID/helios-agents:$COMMIT_SHA', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']
    id: 'deploy-agents-prod'
    waitFor: ['deploy-agents-staging']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcr.io/google.com/cloudsdktool/cloud-sdk', 'gcloud', 'run', 'deploy', 'helios-mcp', '--image', 'gcr.io/$PROJECT_ID/helios-mcp:$COMMIT_SHA', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']
    id: 'deploy-mcp-prod'
    waitFor: ['deploy-mcp-staging']

images:
  - 'gcr.io/$PROJECT_ID/helios-ceo:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/helios-agents:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/helios-mcp:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

substitutions:
  _REGION: 'us-central1'
  _SERVICE_ACCOUNT: 'helios-automation-sa@$PROJECT_ID.iam.gserviceaccount.com'

timeout: '1800s'
